AWSTemplateFormatVersion: "2010-09-09"
Description: Digital Identity IPV CRI Pdv-Matching API
Transform: [AWS::LanguageExtensions, AWS::Serverless-2016-10-31]

Parameters:
  AuditEventNamePrefix:
    Description: "The audit event name prefix"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/AuditEventNamePrefix"
  BearerTokenName:
    Type: String
    Default: HMRCBearerToken
    Description: >-
      The name of the bearer token parameter.
      Temporary solution to be changed once cross account behaviour implemented.
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, localdev, build, staging, integration, production]
    ConstraintDescription: must be dev, localdev, build, staging, integration or production
  CommonStackName:
    Type: String
    Default: common-cri-api
    Description: The name of the stack containing the common CRI lambdas/infra
  TxmaStackName:
    Type: String
    Default: txma-infrastructure
    Description: The name of the stack containing the common TxMA infrastructure
  CodeSigningConfigArn:
    Type: String
    Default: ""
  PermissionsBoundary:
    Type: String
    Default: ""
  DeployAlarmsInDevEnvironment:
    Description: "Set to the string value `true` to deploy alarms in a DEV environment"
    Type: String
    Default: false
  CriIdentifier:
    Description: "The unique credential issuer identifier"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/CriIdentifier"
  LambdaDeploymentPreference:
    Description: "Specifies the configuration to enable gradual Lambda deployments. It can be used to set deployment type and also allows skipping canary deployment by setting to 'AllAtOnce'"
    Type: String
    Default: "AllAtOnce"

Conditions:
  EnforceCodeSigning: !Not [!Equals [!Ref CodeSigningConfigArn, ""]]
  UsePermissionsBoundary: !Not [!Equals [!Ref PermissionsBoundary, ""]]
  IsDevEnvironment: !Equals [!Ref Environment, dev]
  IsLocalDevEnvironment: !Equals [!Ref Environment, localdev]
  IsIntEnvironment: !Equals [!Ref Environment, integration]
  IsProdEnvironment: !Equals [!Ref Environment, production]
  IsDevLikeEnvironment: !Or [!Condition IsLocalDevEnvironment, !Condition IsDevEnvironment]
  IsNotDevLikeEnvironment: !Not
    - !Condition IsDevLikeEnvironment
  IsIntOrProdEnvironment: !Or [!Condition IsIntEnvironment, !Condition IsProdEnvironment]
  UseCanaryDeploymentAlarms: !Not [!Equals [!Ref LambdaDeploymentPreference, AllAtOnce]]
  DeployAlarms: !Or
    - !Condition IsNotDevLikeEnvironment
    - !Equals [!Ref DeployAlarmsInDevEnvironment, "true"]
  AddProvisionedConcurrency: !Not [!Equals [!FindInMap [ProvisionedConcurrency, Environment, !Ref Environment], 0]]

Mappings:
  StaticVariables:
    Urls:
      SupportManualURL: "https://team-manual.account.gov.uk/teams/CRI-Orange-team/supporting-cri-orange/hmrc-nino-runbook/#backend-api-alarms"
  # Only numeric values should be assigned here
  MaxJwtTtl:
    Environment:
      dev: 2
      localdev: 2
      build: 2
      staging: 6
      integration: 6
      production: 6

  # Permitted values: SECONDS,MINUTES,HOURS,DAYS,MONTHS,YEARS
  JwtTtlUnit:
    Environment:
      dev: HOURS
      localdev: HOURS
      build: HOURS
      staging: MONTHS
      integration: MONTHS
      production: MONTHS

  ProvisionedConcurrency:
    Environment:
      localdev: 0
      dev: 0
      build: 1
      staging: 0
      integration: 0
      production: 1

  Dynatrace:
    SecretArn:
      dev: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      localdev: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      build: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      staging: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      integration: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      production: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables

  PlatformConfiguration:
    dev:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    build:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    staging:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    integration:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    production:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2

  EnvironmentConfiguration:
    localdev:
      DOMAINNAME: review-hc.localdev.account.gov.uk
    dev:
      DOMAINNAME: review-hc.dev.account.gov.uk
    build:
      DOMAINNAME: review-hc.build.account.gov.uk
    staging:
      DOMAINNAME: review-hc.staging.account.gov.uk
    integration:
      DOMAINNAME: review-hc.integration.account.gov.uk
    production:
      DOMAINNAME: review-hc.production.account.gov.uk

Globals:
  Function:
    Timeout: 30
    CodeUri: ..
    Runtime: nodejs22.x
    Architectures: [arm64]
    MemorySize: 2048
    PermissionsBoundary: !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]
    VpcConfig:
      SecurityGroupIds:
        - !ImportValue spoke-vpc-AWSServicesEndpointSecurityGroupId
      SubnetIds:
        - !ImportValue spoke-vpc-ProtectedSubnetIdA
        - !ImportValue spoke-vpc-ProtectedSubnetIdB
        - !ImportValue spoke-vpc-ProtectedSubnetIdC
    Layers:
      # SEE https://github.com/govuk-one-login/observability-infrastructure/tree/main/lambdalayer
      - arn:aws:lambda:eu-west-2:216552277552:layer:Dynatrace_OneAgent_1_313_2_20250404-043044_with_collector_nodejs:1
    Environment:
      Variables:
        NODE_OPTIONS: --enable-source-maps
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: true
        POWERTOOLS_METRICS_NAMESPACE: !Ref CriIdentifier
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_CONNECTION_BASE_URL: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_CLUSTER_ID: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_TENANT: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        AUDIT_QUEUE_URL:
          Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueUrl
        AUDIT_COMPONENT_ID: !Sub "{{resolve:ssm:/${CommonStackName}/verifiable-credential/issuer}}"
    AutoPublishAlias: live
    ProvisionedConcurrencyConfig: !If
      - AddProvisionedConcurrency
      - ProvisionedConcurrentExecutions: !FindInMap [ProvisionedConcurrency, Environment, !Ref Environment]
      - !Ref AWS::NoValue

Resources:
  JWKSBucketRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: AccessJWKSJson
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:Get*"
                Resource: !Sub
                  - "arn:aws:s3:::govuk-one-login-hmrc-check-published-keys-${env}/jwks.json"
                  - env: !If [IsLocalDevEnvironment, "dev", !Ref Environment]
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Tags:
        - Key: "key_consumer_type"
          Value: "use"

  JsonWebKeys5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-JsonWebKeys5XXApiGwErrorAlarm"
      AlarmDescription: !Sub
        - "${AWS::StackName}-public - There has been a small proportion of 5XX errors on the JsonWebKeys endpoint. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-public
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-public
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum

  JsonWebKeys5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-JsonWebKeys5XXApiGwErrorCriticalAlarm"
      AlarmDescription: !Sub
        - "${AWS::StackName}-public - There has been a significant proportion of 5XX errors on the JsonWebKeys endpoint. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-public
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-public
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum

  JsonWebKeys4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-JsonWebKeys4XXApiGwErrorAlarm"
      AlarmDescription: !Sub
        - "${AWS::StackName}-public - There has been a small proportion of 4XX errors on the JsonWebKeys endpoint. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<3 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-public
                - Name: Resource
                  Value: /.well-known/jwks.json
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-public
                - Name: Resource
                  Value: /.well-known/jwks.json
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

  SessionLambdaFailedToVerifyJWTWarningAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmDescription: !Sub
        - "Errors verifying JWTs (jwt_verification_failed) rate exceeds 10% of Session Lambda invocations consecutively for 3, 5 minute periods. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ComparisonOperator: GreaterThanThreshold
      Threshold: 10
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      TreatMissingData: notBreaching
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      Metrics:
        - Id: errors
          Expression: IF(m2 != 0, (m1 / m2) * 100, 0)
          Label: JWTErrorRate
          ReturnData: true
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${CriIdentifier}"
              MetricName: jwt_verification_failed
              Dimensions:
                - Name: service
                  Value: !Sub "${CriIdentifier}-sessionTS"
            Period: 300
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${CommonStackName}-SessionFunctionTS
            Period: 300
            Stat: Sum

  SessionLambdaFailedToVerifyJWTCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmDescription: !Sub
        - "Errors verifying JWTs (jwt_verification_failed) rate exceeds 80% of Session Lambda invocations consecutively for 3, 5 minute periods. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ComparisonOperator: GreaterThanThreshold
      Threshold: 80
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      TreatMissingData: notBreaching
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      Metrics:
        - Id: errors
          Expression: IF(m2 != 0, (m1 / m2) * 100, 0)
          Label: JWTErrorRate
          ReturnData: true
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${CriIdentifier}"
              MetricName: jwt_verification_failed
              Dimensions:
                - Name: service
                  Value: !Sub "${CriIdentifier}-sessionTS"
            Period: 300
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${CommonStackName}-SessionFunctionTS
            Period: 300
            Stat: Sum

  TokenLambdaFailedToVerifyJWTWarningAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmDescription: !Sub
        - "Errors verifying JWTs (jwt_verification_failed) rate exceeds 10% of Token Lambda invocations consecutively for 3, 5 minute periods. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ComparisonOperator: GreaterThanThreshold
      Threshold: 10
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      TreatMissingData: notBreaching
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      Metrics:
        - Id: errors
          Expression: IF(m2 != 0, (m1 / m2) * 100, 0)
          Label: JWTErrorRate
          ReturnData: true
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${CriIdentifier}"
              MetricName: jwt_verification_failed
              Dimensions:
                - Name: service
                  Value: !Sub "${CriIdentifier}-access-token-2"
            Period: 300
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${CommonStackName}-AccessTokenFunctionTS
            Period: 300
            Stat: Sum

  TokenLambdaFailedToVerifyJWTCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmDescription: !Sub
        - "Errors verifying JWTs (jwt_verification_failed) rate exceeds 80% of Token Lambda invocations consecutively for 3, 5 minute periods. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ComparisonOperator: GreaterThanThreshold
      Threshold: 80
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      TreatMissingData: notBreaching
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      Metrics:
        - Id: errors
          Expression: IF(m2 != 0, (m1 / m2) * 100, 0)
          Label: JWTErrorRate
          ReturnData: true
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${CriIdentifier}"
              MetricName: jwt_verification_failed
              Dimensions:
                - Name: service
                  Value: !Sub "${CriIdentifier}-access-token-2"
            Period: 300
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${CommonStackName}-AccessTokenFunctionTS
            Period: 300
            Stat: Sum

  CheckHmrcLambdaConcurrency80Alarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-CheckHmrcLambdaConcurrency80-alarm
      AlarmDescription: !Sub
        - "Check HMRC ${Environment} lambdas alarm if over 80% of concurrent executions is used. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: ConcurrentExecutions
      Namespace: AWS/Lambda
      Statistic: Maximum
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 780
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  CheckHmrcLambdaErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-CheckHmrcLambdaErrors-alarm
      AlarmDescription: !Sub
        - "Check HMRC ${Environment} lambda errors. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 3
      DatapointsToAlarm: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  CheckHmrcLambdaThrottle:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-CheckHmrcLambdaThrottle-alarm
      AlarmDescription: !Sub
        - "Check HMRC ${Environment} lambda throttle. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
      InsufficientDataActions: []
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 3
      DatapointsToAlarm: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  AbandonFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/abandon/src/abandon-handler.lambdaHandler
      DeploymentPreference:
        Enabled: true
        Type: !Ref LambdaDeploymentPreference
        Role: !GetAtt CodeDeployServiceRole.Arn
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref AbandonFunctionCanaryErrors, !Ref AbandonFunctionCanary5xxErrors]
          - [!Ref AWS::NoValue]
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/AbandonFunction
      CodeSigningConfigArn: !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-Abandon"
          SESSION_TABLE: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
          ISSUER: !Sub "{{resolve:ssm:/${CommonStackName}/verifiable-credential/issuer}}"
          LOG_FULL_ERRORS: !If [IsIntOrProdEnvironment, "false", "true"]
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBWritePolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - SQSSendMessagePolicy:
            QueueName:
              Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueName
        - Statement:
            - Sid: auditEventQueueKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueEncryptionKeyArn

  AbandonFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AbandonFunction.Alias
      Principal: apigateway.amazonaws.com

  AbandonFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/AbandonFunction
      RetentionInDays: 30

  AbandonFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn: !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref AbandonFunctionLogGroup

  PublicNinoCheckApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Public NINO Check CRI API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: "/*"
          HttpMethod: "*"
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 200
          ThrottlingBurstLimit: 400
      AccessLogSetting:
        DestinationArn: !GetAtt PublicNinoCheckApiAccessLogGroup.Arn
        Format:
          Fn::ToJsonString:
            requestId: $context.requestId
            ip: $context.identity.sourceIp
            requestTime: $context.requestTime
            httpMethod: $context.httpMethod
            path: $context.path
            routeKey: $context.routeKey
            status: $context.status
            protocol: $context.protocol
            responseLatency: $context.responseLatency
            responseLength: $context.responseLength
      TracingEnabled: true
      Name: !Sub ${AWS::StackName}-public
      StageName: !Ref Environment
      DefinitionBody:
        openapi: 3.0.1
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: public-api.yaml
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: REGIONAL

  PublicNinoCheckApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/vendedlogs/apigateway/${AWS::StackName}-${PublicNinoCheckApi}-public-AccessLogs"
      RetentionInDays: 30

  PublicNinoCheckApiLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn: !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref PublicNinoCheckApiAccessLogGroup

  PublicNinoCheckApiFatalErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref PublicNinoCheckApiAccessLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "PublicNinoCheckApi-Fatalerror"

  PublicNinoCheckApiFatalErrorAlarm:
    DependsOn:
      - "PublicNinoCheckApiFatalErrorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-PublicNinoCheckApi-FatalError-alarm"
      AlarmDescription: !Sub
        - "Trigger an alarm when Fatal ${PublicNinoCheckApi} Error occurs. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      MetricName: PublicNinoCheckApi-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  PrivateNinoCheckApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Private NINO Check CRI API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: "/*"
          HttpMethod: "*"
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 200
          ThrottlingBurstLimit: 400
      AccessLogSetting:
        DestinationArn: !GetAtt PrivateNinoCheckApiAccessLogGroup.Arn
        Format:
          Fn::ToJsonString:
            requestId: $context.requestId
            ip: $context.identity.sourceIp
            requestTime: $context.requestTime
            httpMethod: $context.httpMethod
            path: $context.path
            routeKey: $context.routeKey
            status: $context.status
            protocol: $context.protocol
            responseLatency: $context.responseLatency
            responseLength: $context.responseLength
      TracingEnabled: true
      Name: !Sub ${AWS::StackName}-private
      StageName: !Ref Environment
      DefinitionBody:
        openapi: 3.0.1
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: {}
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: private-api.yaml
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: !If [IsLocalDevEnvironment, REGIONAL, PRIVATE]
      Auth:
        ResourcePolicy:
          CustomStatements:
            - Effect: Allow
              Resource: execute-api:/*
              Action: execute-api:Invoke
              Principal: "*"
            - !If
              - IsLocalDevEnvironment
              - !Ref AWS::NoValue
              - Effect: Deny
                Resource: execute-api:/*
                Action: execute-api:Invoke
                Principal: "*"
                Condition:
                  StringNotEquals:
                    aws:SourceVpce:
                      - !ImportValue cri-vpc-ApiGatewayVpcEndpointId
                      - !ImportValue spoke-vpc-ExecuteApiGatewayEndpointId

  PrivateNinoCheckApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/vendedlogs/apigateway/${AWS::StackName}-${PrivateNinoCheckApi}-private-AccessLogs"
      RetentionInDays: 30

  PrivateNinoCheckApiLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn: !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref PrivateNinoCheckApiAccessLogGroup

  PrivateNinoCheckApiFatalErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref PrivateNinoCheckApiAccessLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"
          MetricName: "PrivateNinoCheckApi-Fatalerror"

  PrivateNinoCheckApiFatalErrorAlarm:
    DependsOn:
      - "PrivateNinoCheckApiFatalErrorMetricFilter"
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-PrivateNinoCheckApi-FatalError-alarm"
      AlarmDescription: !Sub
        - "Trigger an alarm when Fatal ${PrivateNinoCheckApi} Error occurs.Runbook:  ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      MetricName: PrivateNinoCheckApi-Fatalerror
      Namespace: !Sub "${AWS::StackName}/LogMessages"
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  NinoCheckAPIGW5XXErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-NinoCheckApi-5XXError-alarm"
      AlarmDescription: !Sub Check HMRC ${Environment} API Gateway 5XX errors
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: e1
          Label: Expression1
          ReturnData: true
          Expression: SUM(METRICS())
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-public"
            Period: 300
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-private"
            Period: 300
            Stat: Sum

  DynamoTablesEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      Description: !Sub ${AWS::StackName} customer-managed key for DynamoDB at-rest encryption
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: "dynamodb.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              StringEquals:
                "kms:CallerAccount": !Sub "${AWS::AccountId}"
                "kms:ViaService":
                  - "dynamodb.amazonaws.com"
                  - !Sub "lambda.${AWS::Region}.amazonaws.com"

  UserAttemptsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-user-attempts
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: sessionId
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: sessionId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      SSESpecification:
        KMSMasterKeyId: !Ref DynamoTablesEncryptionKey
        SSEEnabled: true
        SSEType: KMS

  NinoUsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-nino-users
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: sessionId
          AttributeType: S
      KeySchema:
        - AttributeName: sessionId
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      SSESpecification:
        KMSMasterKeyId: !Ref DynamoTablesEncryptionKey
        SSEEnabled: true
        SSEType: KMS

  NinoCheckFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      DeploymentPreference:
        Type: !Ref LambdaDeploymentPreference
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref NinoCheckFunctionCanaryErrors, !Ref NinoCheckFunction5xxCanaryErrors]
          - [!Ref AWS::NoValue]
        Role: !GetAtt CodeDeployServiceRole.Arn
      Handler: lambdas/nino-check/src/handler.handler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/NinoCheckFunction
      CodeSigningConfigArn: !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: check-hmrc-cri-api/OtgUrl/*
        - SSMParameterReadPolicy:
            ParameterName: check-hmrc-cri-api/NinoCheckUrl/*
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBWritePolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - DynamoDBWritePolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Ref UserAttemptsTable
        - DynamoDBWritePolicy:
            TableName: !Ref UserAttemptsTable
        - DynamoDBReadPolicy:
            TableName: !Ref NinoUsersTable
        - DynamoDBWritePolicy:
            TableName: !Ref NinoUsersTable
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoTablesEncryptionKey
        - SQSSendMessagePolicy:
            QueueName:
              Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueName
        - Statement:
            - Sid: auditEventQueueKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueEncryptionKeyArn

      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-NinoCheckFunction"
          SESSION_TABLE: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
          PERSON_IDENTITY_TABLE: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
          ATTEMPT_TABLE: !Ref UserAttemptsTable
          NINO_USER_TABLE: !Ref NinoUsersTable
          LOG_FULL_ERRORS: !If [IsIntOrProdEnvironment, "false", "true"]

  NinoCheckFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/NinoCheckFunction
      RetentionInDays: 30

  NinoCheckFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn: !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref NinoCheckFunctionLogGroup

  NinoCheckFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref NinoCheckFunction.Alias
      Principal: apigateway.amazonaws.com

  IssueCredentialFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      DeploymentPreference:
        Type: !Ref LambdaDeploymentPreference
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref IssueCredentialFunctionCanaryErrors, !Ref IssueCredentialFunction5xxCanaryErrors]
          - [!Ref AWS::NoValue]
        Role: !GetAtt CodeDeployServiceRole.Arn
      Handler: lambdas/issue-credential/src/handler.handler
      LoggingConfig:
        LogGroup: !Sub /aws/lambda/${AWS::StackName}/IssueCredentialFunction
      CodeSigningConfigArn: !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Ref UserAttemptsTable
        - DynamoDBReadPolicy:
            TableName: !Ref NinoUsersTable
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoTablesEncryptionKey
        - SSMParameterReadPolicy:
            ParameterName: check-hmrc-cri-api/contraindicationMappings
        - SSMParameterReadPolicy:
            ParameterName: check-hmrc-cri-api/contraIndicatorReasonsMapping
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${CommonStackName}/verifiableCredentialKmsSigningKeyId
        - Statement:
            Effect: Allow
            Action: kms:Sign
            Resource: !ImportValue core-infrastructure-CriVcSigningKey1Arn
        - SQSSendMessagePolicy:
            QueueName:
              Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueName
        - Statement:
            - Sid: auditEventQueueKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueEncryptionKeyArn
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-IssueCredentialFunction"
          SESSION_TABLE: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
          PERSON_IDENTITY_TABLE: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
          ATTEMPT_TABLE: !Ref UserAttemptsTable
          NINO_USER_TABLE: !Ref NinoUsersTable
          ISSUER: !Sub "{{resolve:ssm:/${CommonStackName}/verifiable-credential/issuer}}"
          MAX_JWT_TTL: !FindInMap [MaxJwtTtl, Environment, !Ref Environment]
          JWT_TTL_UNIT: !FindInMap [JwtTtlUnit, Environment, !Ref Environment]
          LOG_FULL_ERRORS: !If [IsIntOrProdEnvironment, "false", "true"]
          COMMON_STACK_NAME: !Sub ${CommonStackName}
          DOMAIN_NAME: !FindInMap [EnvironmentConfiguration, !Ref Environment, DOMAINNAME]

  IssueCredentialFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/IssueCredentialFunction
      RetentionInDays: 30

  IssueCredentialFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      DestinationArn: !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]
      FilterPattern: ""
      LogGroupName: !Ref IssueCredentialFunctionLogGroup

  IssueCredentialFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref IssueCredentialFunction.Alias
      Principal: apigateway.amazonaws.com

  ##################################################################
  #                                                                  #
  # Canary Alarms                                                    #
  #                                                                  #
  ####################################################################

  AbandonFunctionCanary5xxErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: "Abandon lambda returning 5xx response."
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Sub "${AWS::StackName}-private"
        - Name: Method
          Value: POST
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /abandon
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  AbandonFunctionCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Errors returned from the AbandonFunction Lambda."
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-AbandonFunction:live"
        - Name: FunctionName
          Value: !Ref AbandonFunction
        - Name: ExecutedVersion
          Value: !GetAtt AbandonFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  NinoCheckFunctionCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Errors returned from the NinoCheckFunction Lambda."
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-NinoCheckFunction:live"
        - Name: FunctionName
          Value: !Ref NinoCheckFunction
        - Name: ExecutedVersion
          Value: !GetAtt NinoCheckFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  NinoCheckFunction5xxCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Check HRMC NINO Check Lambda returning 5xx response."
      AlarmName: !Sub ${AWS::StackName}-${Environment}-NinoCheckFunction5xxCanaryErrors
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Sub "${AWS::StackName}-public"
        - Name: Method
          Value: POST
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /credential/issue
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  IssueCredentialFunctionCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Errors returned from the IssueCredentialFunction Lambda."
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-IssueCredentialFunction:live"
        - Name: FunctionName
          Value: !Ref IssueCredentialFunction
        - Name: ExecutedVersion
          Value: !GetAtt IssueCredentialFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  IssueCredentialFunction5xxCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Check HRMC Issue credential Lambda returning 5xx response."
      AlarmName: !Sub ${AWS::StackName}-${Environment}-IssueCredentialFunction5xxCanaryErrors
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Sub "${AWS::StackName}-public"
        - Name: Method
          Value: POST
        - Name: Resource
          Value: /credential/issue
        - Name: Stage
          Value: !Ref Environment
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ####################################################################
  #                                                                  #
  # Code Deploy Service Role                                       #
  #                                                                  #
  ####################################################################

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
      PermissionsBoundary: !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]

##################################################################
#                                                                  #
#  Stack Outputs                                                   #
#                                                                  #
####################################################################
Outputs:
  ApiGatewayId:
    Description: API GatewayID of the Nino Check HMRC CRI API
    Value: !Ref PublicNinoCheckApi
    Export:
      Name: !Sub ${AWS::StackName}-ApiGatewayId
  PublicApiGatewayId:
    Description: API Gateway ID of the public Nino Check HMRC CRI API
    Value: !Ref PublicNinoCheckApi
    Export:
      Name: !Sub ${AWS::StackName}-PublicApiGatewayId
  PrivateApiGatewayId:
    Description: API Gateway ID of the private Nino Check HMRC API
    Value: !Ref PrivateNinoCheckApi
    Export:
      Name: !Sub ${AWS::StackName}-PrivateApiGatewayId
  CommonStackName:
    Description: Common Stack Name
    Value: !Ref CommonStackName
  UserAttemptsTable:
    Description: UserAttemptsTable table name
    Value: !Ref UserAttemptsTable
  NinoUsersTable:
    Description: NinoUsersTable table name
    Value: !Ref NinoUsersTable
